[{"/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/index.js":"1","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/pages/MatchesPage.js":"2","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/pages/PlayersPage.js":"3","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/pages/HomePage.js":"4","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/fetcher.js":"5","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/components/MenuBar.js":"6","/Users/weilongzhang/Downloads/NGA-website/client/src/index.js":"7","/Users/weilongzhang/Downloads/NGA-website/client/src/pages/HomePage.js":"8","/Users/weilongzhang/Downloads/NGA-website/client/src/pages/MatchesPage.js":"9","/Users/weilongzhang/Downloads/NGA-website/client/src/pages/PlayersPage.js":"10","/Users/weilongzhang/Downloads/NGA-website/client/src/fetcher.js":"11","/Users/weilongzhang/Downloads/NGA-website/client/src/components/MenuBar.js":"12","/Users/weilongzhang/Downloads/NGA-website/client/src/pages/ArtistsPage.js":"13"},{"size":826,"mtime":1633261358000,"results":"14","hashOfConfig":"15"},{"size":12764,"mtime":1663610081398,"results":"16","hashOfConfig":"15"},{"size":16141,"mtime":1663625536326,"results":"17","hashOfConfig":"15"},{"size":5122,"mtime":1663563273615,"results":"18","hashOfConfig":"15"},{"size":1811,"mtime":1633347958000,"results":"19","hashOfConfig":"15"},{"size":862,"mtime":1633206560000,"results":"20","hashOfConfig":"15"},{"size":827,"mtime":1668114760644,"results":"21","hashOfConfig":"22"},{"size":4006,"mtime":1668127015968,"results":"23","hashOfConfig":"22"},{"size":10822,"mtime":1667880102921,"results":"24","hashOfConfig":"22"},{"size":13376,"mtime":1667880102921,"results":"25","hashOfConfig":"22"},{"size":1758,"mtime":1668114347109,"results":"26","hashOfConfig":"22"},{"size":829,"mtime":1668116174271,"results":"27","hashOfConfig":"22"},{"size":14142,"mtime":1668126839008,"results":"28","hashOfConfig":"22"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1gdp67g",{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"12waao",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"47"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/index.js",[],["62","63"],"/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/pages/MatchesPage.js",["64"],"import React from 'react';\r\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\n\r\n\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n\r\n} from 'antd'\r\n\r\nimport { getMatchSearch, getMatch } from '../fetcher'\r\n\r\n\r\nimport MenuBar from '../components/MenuBar';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\nclass MatchesPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            awayQuery: \"\",\r\n            homeQuery: \"\",\r\n            matchesResults: [],\r\n            selectedMatchId: window.location.search ? window.location.search.substring(1).split('=')[1] : 0,\r\n            selectedMatchDetails: null\r\n\r\n        }\r\n\r\n        this.handleAwayQueryChange = this.handleAwayQueryChange.bind(this)\r\n        this.handleHomeQueryChange = this.handleHomeQueryChange.bind(this)\r\n        this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.goToMatch = this.goToMatch.bind(this)\r\n\r\n    }\r\n\r\n\r\n\r\n    handleAwayQueryChange(event) {\r\n        this.setState({ awayQuery: event.target.value })\r\n    }\r\n\r\n    handleHomeQueryChange(event) {\r\n        // TASK 10: update state variables appropriately. See handleAwayQueryChange(event) for reference\r\n        this.setState({ homeQuery: event.target.value })\r\n    }\r\n    goToMatch(matchId) {\r\n        window.location = `/matches?id=${matchId}`\r\n    }\r\n\r\n    updateSearchResults() {\r\n        //TASK 11: call getMatchSearch and update matchesResults in state. See componentDidMount() for a hint\r\n        getMatchSearch(this.state.homeQuery, this.state.awayQuery, null, null).then(res => {\r\n            this.setState({ matchesResults: res.results })\r\n        })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        getMatchSearch(this.state.homeQuery, this.state.awayQuery, null, null).then(res => {\r\n            this.setState({ matchesResults: res.results })\r\n        })\r\n\r\n        getMatch(this.state.selectedMatchId).then(res => {\r\n            this.setState({ selectedMatchDetails: res.results[0] })\r\n        })\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <MenuBar />\r\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Home Team</label>\r\n                            <FormInput placeholder=\"Home Team\" value={this.state.homeQuery} onChange={this.handleHomeQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Away Team</label>\r\n                            <FormInput placeholder=\"Away Team\" value={this.state.awayQuery} onChange={this.handleAwayQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\r\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\r\n                        </FormGroup></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n                <Divider />\r\n                {/* TASK 12: Copy over your implementation of the matches table from the home page */}\r\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n                <Table onRow={(record, rowIndex) => {\r\n                return {\r\n                onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \r\n                };\r\n                }} \r\n                dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\r\n                    <ColumnGroup title=\"Teams\">\r\n                    {/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\r\n                    <Column title=\"HomeTeam\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\r\n                    <Column title=\"AwayTeam\" dataIndex=\"Away\" key=\"Away\" sorter= {(a, b) => a.Away.localeCompare(b.Away)}/>\r\n                    </ColumnGroup>\r\n                    <ColumnGroup title=\"Goals\">\r\n                    {/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\r\n                    <Column title=\"HomeGoals\" dataIndex=\"HomeGoals\" key=\"HomeGoals\" sorter= {(a, b) => Number(a.HomeGoals)-Number(b.HomeGoals)}/>\r\n                    <Column title=\"AwayGoals\" dataIndex=\"AwayGoals\" key=\"AwayGoals\" sorter= {(a, b) => Number(a.AwayGoals)-Number(b.AwayGoals)}/>\r\n                    </ColumnGroup>\r\n                    {/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\r\n                    <Column title=\"Date\" dataIndex=\"Date\" key=\"Date\"/>\r\n                    <Column title=\"Time\" dataIndex=\"Time\" key=\"Time\"/>\r\n                </Table>\r\n                </div>\r\n                \r\n                <Divider />\r\n                {this.state.selectedMatchDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n                    <Card>\r\n                        <CardBody>\r\n\r\n\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col flex={2} style={{ textAlign: 'left' }}>\r\n                                    <CardTitle>{this.state.selectedMatchDetails.Home}</CardTitle>\r\n\r\n                                </Col>\r\n                                <Col flex={2} style={{ textAlign: 'center' }}>\r\n                                    {this.state.selectedMatchDetails.Date} at {this.state.selectedMatchDetails.Time}\r\n                                </Col>\r\n                                {/* TASK 13: Add a column with flex = 2, and text alignment = right to display the name of the away team - similar to column 1 in this row */}\r\n                                <Col flex={2} style={{ textAlign: 'right' }}>\r\n                                    <CardTitle>{this.state.selectedMatchDetails.Away}</CardTitle>\r\n                                </Col>\r\n\r\n                            </Row>\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <h3>{this.state.selectedMatchDetails.HomeGoals}</h3>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Goals\r\n                                </Col >\r\n                                {/* TASK 14: Add a column with span = 9, and text alignment = right to display the # of goals the away team scored - similar 1 in this row */}\r\n\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    <h3>{this.state.selectedMatchDetails.AwayGoals}</h3>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* TASK 15: create a row for goals at half time similar to the row for 'Goals' above, but use h5 in place of h3!  */}\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.HTHomeGoals}</h5>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Half Time Goals\r\n                                </Col >\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.HTAwayGoals}</h5>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <Progress value={this.state.selectedMatchDetails.ShotsOnTargetHome * 100 / this.state.selectedMatchDetails.ShotsHome}>{this.state.selectedMatchDetails.ShotsOnTargetHome} / {this.state.selectedMatchDetails.ShotsHome}</Progress>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Shot Accuracy\r\n                                </Col >\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    {/* TASK 18: add a progress bar to display the shot accuracy for the away team -  look at the progress bar in column 1 of this row for reference*/}\r\n                                    <Progress value={this.state.selectedMatchDetails.ShotsOnTargetAway * 100 / this.state.selectedMatchDetails.ShotsAway}>{this.state.selectedMatchDetails.ShotsOnTargetAway} / {this.state.selectedMatchDetails.ShotsAway}</Progress>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.CornersHome}</h5>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Corners\r\n                                </Col >\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.CornersAway}</h5>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* TASK 16: add a row for fouls - check out the above lines for how we did it for corners */}\r\n\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.FoulsHome}</h5>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Fouls\r\n                                </Col >\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.FoulsAway}</h5>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.RCHome}</h5>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Red Cards\r\n                                </Col >\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.RCAway}</h5>\r\n                                </Col>\r\n                            </Row>\r\n                            {/* TASK 17: add a row for yellow cards - check out the above lines for how we did it for red cards */}\r\n                            \r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                                <Col span={9} style={{ textAlign: 'left' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.YCHome}</h5>\r\n                                </Col >\r\n                                <Col span={6} style={{ textAlign: 'center' }}>\r\n                                    Yellow Cards\r\n                                </Col >\r\n                                <Col span={9} style={{ textAlign: 'right' }}>\r\n                                    <h5>{this.state.selectedMatchDetails.YCAway}</h5>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </CardBody>\r\n                    </Card>\r\n                    \r\n                </div> : null}\r\n                <Divider />\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MatchesPage\r\n\r\n","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/pages/PlayersPage.js",["65","66","67","68","69"],"import React from 'react';\r\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\r\n\r\nimport {\r\n    Table,\r\n    Pagination,\r\n    Select,\r\n    Row,\r\n    Col,\r\n    Divider,\r\n    Slider,\r\n    Rate \r\n} from 'antd'\r\nimport { RadarChart } from 'react-vis';\r\nimport { format } from 'd3-format';\r\n\r\n\r\n\r\n\r\nimport MenuBar from '../components/MenuBar';\r\nimport { getPlayerSearch, getPlayer } from '../fetcher'\r\nconst wideFormat = format('.3r');\r\n\r\nconst playerColumns = [\r\n    {\r\n        title: 'Name',\r\n        dataIndex: 'Name',\r\n        key: 'Name',\r\n        sorter: (a, b) => a.Name.localeCompare(b.Name),\r\n        render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\r\n    },\r\n    {\r\n        title: 'Nationality',\r\n        dataIndex: 'Nationality',\r\n        key: 'Nationality',\r\n        sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\r\n    },\r\n    {\r\n        title: 'Rating',\r\n        dataIndex: 'Rating',\r\n        key: 'Rating',\r\n        sorter: (a, b) => a.Rating - b.Rating\r\n\r\n    },\r\n    // TASK 19: copy over your answers for tasks 7 - 9 to add columns for potential, club, and value\r\n    // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\r\n    {\r\n        title: 'Potential',\r\n        dataIndex: 'Potential',\r\n        key: 'Potential',\r\n        sorter: (a, b) => a.Rating - b.Rating\r\n        \r\n    },\r\n    // TASK 8: add a column for Club, with the ability to (alphabetically) sort \r\n    {\r\n        title: 'Club',\r\n        dataIndex: 'Club',\r\n        key: 'Club',\r\n        sorter: (a, b) => a.Club.localeCompare(b.Club)\r\n        \r\n    },\r\n    // TASK 9: add a column for Value - no sorting required\r\n    {\r\n        title: 'Value',\r\n        dataIndex: 'Value',\r\n        key: 'Value'\r\n    }\r\n];\r\n\r\n\r\nclass PlayersPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            nameQuery: '',\r\n            nationalityQuery: '',\r\n            clubQuery: '',\r\n            ratingHighQuery: 100,\r\n            ratingLowQuery: 0,\r\n            potHighQuery: 100,\r\n            potLowQuery: 0,\r\n            selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\r\n            selectedPlayerDetails: null,\r\n            playersResults: []\r\n\r\n        }\r\n\r\n        this.updateSearchResults = this.updateSearchResults.bind(this)\r\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\r\n        this.handleNationalityQueryChange = this.handleNationalityQueryChange.bind(this)\r\n        this.handleClubQueryChange = this.handleClubQueryChange.bind(this)\r\n        this.handleRatingChange = this.handleRatingChange.bind(this)\r\n        this.handlePotentialChange = this.handlePotentialChange.bind(this)\r\n    }\r\n\r\n    \r\n\r\n    handleNameQueryChange(event) {\r\n        this.setState({ nameQuery: event.target.value })\r\n    }\r\n\r\n    handleClubQueryChange(event) {\r\n        // TASK 20: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ clubQuery: event.target.value })\r\n    }\r\n\r\n    handleNationalityQueryChange(event) {\r\n        // TASK 21: update state variables appropriately. See handleNameQueryChange(event) for reference\r\n        this.setState({ nationalityQuery: event.target.value })\r\n    }\r\n\r\n    handleRatingChange(value) {\r\n        this.setState({ ratingLowQuery: value[0] })\r\n        this.setState({ ratingHighQuery: value[1] })\r\n    }\r\n\r\n    handlePotentialChange(value) {\r\n        // TASK 22: parse value and update state variables appropriately. See handleRatingChange(value) for reference\r\n        this.setState({ potLowQuery: value[0] })\r\n        this.setState({ potHighQuery: value[1] })\r\n    }\r\n\r\n\r\n\r\n    updateSearchResults() {\r\n\r\n        //TASK 23: call getPlayerSearch and update playerResults in state. See componentDidMount() for a hint\r\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\r\n            this.setState({ playersResults: res.results })\r\n        })\r\n\r\n        // TASK 25: call getPlayer with the appropriate parameter and set update the correct state variable. \r\n        // See the usage of getMatch in the componentDidMount method of MatchesPage for a hint! \r\n        getPlayer(this.state.selectedPlayerId).then(res => {\r\n            this.setState({ selectedPlayerDetails: res.results[0] })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n\r\n                <MenuBar />\r\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Name</label>\r\n                            <FormInput placeholder=\"Name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\r\n                        </FormGroup></Col>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Nationality</label>\r\n                            <FormInput placeholder=\"Nationality\" value={this.state.nationalityQuery} onChange={this.handleNationalityQueryChange} />\r\n                        </FormGroup></Col>\r\n                        {/* TASK 26: Create a column for Club, using the elements and style we followed in the above two columns. Use the onChange method (handleClubQueryChange)  */}\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Club</label>\r\n                            <FormInput placeholder=\"Club\" value={this.state.clubQuery} onChange={this.handleClubQueryChange} />\r\n                        </FormGroup></Col>\r\n                    </Row>\r\n                    <br></br>\r\n                    <Row>\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>Rating</label>\r\n                            <Slider range defaultValue={[50, 100]} onChange={this.handleRatingChange} />\r\n                        </FormGroup></Col>\r\n                        \r\n                        {/* TASK 27: Create a column with a label and slider in a FormGroup item for filtering by Potential. See the column above for reference and use the onChange method (handlePotentialChange)  */}\r\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\r\n                            <label>PotentialRating</label>\r\n                            <Slider range defaultValue={[50, 100]} onChange={this.handlePotentialChange} />\r\n                        </FormGroup></Col>\r\n                        \r\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\r\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\r\n                        </FormGroup></Col>\r\n\r\n                    </Row>\r\n\r\n\r\n                </Form>\r\n                <Divider />\r\n                {/* TASK 24: Copy in the players table from the Home page, but use the following style tag: style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }} - this should be one line of code! */}\r\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}><Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/></div>\r\n                <Divider />\r\n\r\n                {this.state.selectedPlayerDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\r\n                    <Card>\r\n                    \r\n                        <CardBody>\r\n                        <Row gutter='30' align='middle' justify='center'>\r\n                            <Col flex={2} style={{ textAlign: 'left' }}>\r\n                            <h3>{this.state.selectedPlayerDetails.Name}</h3>\r\n\r\n                            </Col>\r\n\r\n                            <Col flex={2} style={{ textAlign: 'right' }}>\r\n                            <img src={this.state.selectedPlayerDetails.Photo} referrerpolicy=\"no-referrer\" alt={null} style={{height:'15vh'}}/>\r\n\r\n                            </Col>\r\n                        </Row>\r\n                        <Row gutter='30' align='middle' justify='left'>\r\n                            <Col>\r\n                            <h5>{this.state.selectedPlayerDetails.Club}</h5>\r\n                            </Col>\r\n                            <Col>\r\n                            <h5>{this.state.selectedPlayerDetails.JerseyNumber}</h5>\r\n                            </Col>\r\n                            <Col>\r\n                            <h5>{this.state.selectedPlayerDetails.BestPosition}</h5>\r\n                            </Col>\r\n                        </Row>\r\n                        <br>\r\n                        </br>\r\n                        <Row gutter='30' align='middle' justify='left'>\r\n                            <Col>\r\n                            Age: {this.state.selectedPlayerDetails.Age}\r\n                            </Col>\r\n                            {/* TASK 28: add two more columns here for Height and Weight, with the appropriate labels as above */}\r\n                            <Col>\r\n                            Height: {this.state.selectedPlayerDetails.Height}\r\n                            </Col>\r\n                            <Col>\r\n                            Weight: {this.state.selectedPlayerDetails.Weight}\r\n                            </Col>\r\n\r\n                            <Col flex={2} style={{ textAlign: 'right' }}>\r\n                            {this.state.selectedPlayerDetails.Nationality}\r\n                                <img src={this.state.selectedPlayerDetails.Flag} referrerpolicy=\"no-referrer\" alt={null} style={{height:'3vh', marginLeft: '1vw'}}/>\r\n                            </Col>\r\n\r\n                        </Row>\r\n                            <Row gutter='30' align='middle' justify='left'>\r\n                                <Col>\r\n                                Value: {this.state.selectedPlayerDetails.Value}\r\n                                </Col>\r\n                                <Col>\r\n                                Release Clause: {this.state.selectedPlayerDetails.ReleaseClause}\r\n                                </Col>\r\n                                {/* TASK 29: Create 2 additional columns for the attributes 'Wage' and 'Contract Valid Until' (use spaces between the words when labelling!) */}\r\n                                <Col>\r\n                                Wage: {this.state.selectedPlayerDetails.Wage}\r\n                                </Col>\r\n                                <Col>\r\n                                Contract Valid Until: {this.state.selectedPlayerDetails.ContractValidUntil}\r\n                                </Col>\r\n                            \r\n                            </Row>\r\n                        </CardBody>\r\n\r\n                    </Card>\r\n\r\n                    <Card style={{marginTop: '2vh'}}>\r\n                        <CardBody>\r\n                            <Row gutter='30' align='middle' justify='center'>\r\n                            <Col flex={2} style={{ textAlign: 'left' }}>\r\n                            <h6>Skill</h6>\r\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.Skill} />\r\n                            <h6>Reputation</h6>\r\n                            {/* TASK 30: create a star rating component for 'InternationalReputation'. Make sure you use the 'disabled' option as above to ensure it is read-only*/}\r\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.InternationalReputation} />\r\n                            <Divider/>\r\n                            <h6>Best Rating</h6>\r\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.BestOverallRating} >{this.state.selectedPlayerDetails.BestOverallRating}</Progress>\r\n                            {/* TASK 31: create the headings and progress bars for 'Potential' and 'Rating'. Use the same style as the one above for 'Best Rating'.*/}\r\n                            <h6>Potential</h6>\r\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Potential} >{this.state.selectedPlayerDetails.Potential}</Progress>\r\n                            <h6>Rating</h6>\r\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Rating} >{this.state.selectedPlayerDetails.Rating}</Progress> \r\n                            </Col >\r\n                                <Col  push={2} flex={2}>\r\n                                {/*TASK 32: In case the player is a GK, show a radar chart (replacing 'null' below) with the labels: Agility, Ball Control, Passing, Positioning, Stamina, Strength */}\r\n\r\n                                    {this.state.selectedPlayerDetails.BestPosition === 'GK'?<RadarChart\r\n                                data={[this.state.selectedPlayerDetails]}\r\n                                tickFormat={t => wideFormat(t)}\r\n                                startingAngle={0}\r\n                                domains={[\r\n                                    { name: 'Diving', domain: [0, 100], getValue: d => d.GKDiving },\r\n                                    { name: 'Handling', domain: [0, 100], getValue: d => d.GKHandling },\r\n                                    { name: 'Kicking', domain: [0, 100], getValue: d => d.GKKicking },\r\n                                    { name: 'Penalties', domain: [0, 100], getValue: d => d.GKPenalties },\r\n                                    { name: 'Positioning', domain: [0, 100], getValue: d => d.GKPositioning },\r\n                                    { name: 'Reflexes', domain: [0, 100], getValue: d => d.GKReflexes }\r\n                                ]}\r\n                                width={450}\r\n                                height={400}\r\n                                \r\n                            />\r\n                                    \r\n                                    \r\n                                    :<RadarChart\r\n                                data={[this.state.selectedPlayerDetails]}\r\n                                tickFormat={t => wideFormat(t)}\r\n                                startingAngle={0}\r\n                                domains={[\r\n                                    { name: 'Agility', domain: [0, 100], getValue: d => d.NAdjustedAgility },\r\n                                    { name: 'Ball Control', domain: [0, 100], getValue: d => d.NBallControl },\r\n                                    { name: 'Passing', domain: [0, 100], getValue: d => d.NPassing },\r\n                                    { name: 'Positioning', domain: [0, 100], getValue: d => d.NPositioning },\r\n                                    { name: 'Stamina', domain: [0, 100], getValue: d => d.NStamina },\r\n                                    { name: 'Strength', domain: [0, 100], getValue: d => d.NStrength }\r\n                                ]}\r\n                                width={450}\r\n                                height={400}\r\n                                \r\n                            />}\r\n                                \r\n                                </Col>\r\n                            </Row>\r\n                        </CardBody>\r\n                    </Card>\r\n\r\n                </div> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayersPage\r\n\r\n","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/pages/HomePage.js",["70"],"import React from 'react';\nimport {\n  Table,\n  Pagination,\n  Select\n} from 'antd'\n\nimport MenuBar from '../components/MenuBar';\nimport { getAllMatches, getAllPlayers } from '../fetcher'\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\n\nconst playerColumns = [\n  {\n    title: 'Name',\n    dataIndex: 'Name',\n    key: 'Name',\n    sorter: (a, b) => a.Name.localeCompare(b.Name),\n    render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n  },\n  {\n    title: 'Nationality',\n    dataIndex: 'Nationality',\n    key: 'Nationality',\n    sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n  },\n  {\n    title: 'Rating',\n    dataIndex: 'Rating',\n    key: 'Rating',\n    sorter: (a, b) => a.Rating - b.Rating\n    \n  },\n  // TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n  {\n    title: 'Potential',\n    dataIndex: 'Potential',\n    key: 'Potential',\n    sorter: (a, b) => a.Rating - b.Rating\n    \n  },\n  // TASK 8: add a column for Club, with the ability to (alphabetically) sort \n  {\n    title: 'Club',\n    dataIndex: 'Club',\n    key: 'Club',\n    sorter: (a, b) => a.Club.localeCompare(b.Club)\n    \n  },\n  // TASK 9: add a column for Value - no sorting required\n  {\n    title: 'Value',\n    dataIndex: 'Value',\n    key: 'Value'\n  }\n];\n\nclass HomePage extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      matchesResults: [],\n      matchesPageNumber: 1,\n      matchesPageSize: 10,\n      playersResults: [],\n      pagination: null  \n    }\n\n    this.leagueOnChange = this.leagueOnChange.bind(this)\n    this.goToMatch = this.goToMatch.bind(this)\n  }\n\n\n  goToMatch(matchId) {\n    window.location = `/matches?id=${matchId}`\n  }\n\n  leagueOnChange(value) {\n    // TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n    // then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n    getAllMatches(null, null, value).then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n    \n  }\n\n  componentDidMount() {\n    getAllMatches(null, null, 'D1').then(res => {\n      this.setState({ matchesResults: res.results })\n    })\n\n    getAllPlayers(null,null).then(res => {\n      //console.log(res.results)\n      // TASK 1: set the correct state attribute to res.results\n      this.setState({ playersResults: res.results })\n    })\n\n \n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <MenuBar />\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '5vh' }}>\n          <h3>Players</h3>\n          <Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/>\n        </div>\n        <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n          <h3>Matches</h3>\n          <Select defaultValue=\"D1\" style={{ width: 120 }} onChange={this.leagueOnChange}>\n            <Option value=\"D1\">Bundesliga</Option>\n             {/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\n             <Option value=\"SP1\">La Liga</Option>\n             <Option value=\"F1\">Ligue 1</Option>\n             <Option value=\"I1\">Series A</Option>\n             <Option value=\"E0\">Premier League</Option>\n          </Select>\n          \n          <Table onRow={(record, rowIndex) => {\n          return {\n          onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n          };\n          }} \n          dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n            <ColumnGroup title=\"Teams\">\n              {/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\n              <Column title=\"HomeTeam\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\n              <Column title=\"AwayTeam\" dataIndex=\"Away\" key=\"Away\" sorter= {(a, b) => a.Away.localeCompare(b.Away)}/>\n            </ColumnGroup>\n            <ColumnGroup title=\"Goals\">\n              {/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\n              <Column title=\"HomeGoals\" dataIndex=\"HomeGoals\" key=\"HomeGoals\" sorter= {(a, b) => Number(a.HomeGoals)-Number(b.HomeGoals)}/>\n              <Column title=\"AwayGoals\" dataIndex=\"AwayGoals\" key=\"AwayGoals\" sorter= {(a, b) => Number(a.AwayGoals)-Number(b.AwayGoals)}/>\n            </ColumnGroup>\n             {/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\n             <Column title=\"Date\" dataIndex=\"Date\" key=\"Date\"/>\n             <Column title=\"Time\" dataIndex=\"Time\" key=\"Time\"/>\n          </Table>\n\n        </div>\n\n\n      </div>\n    )\n  }\n\n}\n\nexport default HomePage\n\n","/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/fetcher.js",[],"/Users/weilongzhang/Library/CloudStorage/OneDrive-Personal/UPenn/CIS550/HW/HW2/HW2/client/src/components/MenuBar.js",[],"/Users/weilongzhang/Downloads/NGA-website/client/src/index.js",[],["71","72"],"/Users/weilongzhang/Downloads/NGA-website/client/src/pages/HomePage.js",["73","74"],"/Users/weilongzhang/Downloads/NGA-website/client/src/pages/MatchesPage.js",["75"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\n\nimport {\n    Table,\n    Pagination,\n    Row,\n    Col,\n    Divider,\n\n} from 'antd'\n\nimport { getMatchSearch, getMatch } from '../fetcher'\n\n\nimport MenuBar from '../components/MenuBar';\n\nconst { Column, ColumnGroup } = Table;\n\n\nclass MatchesPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            awayQuery: \"\",\n            homeQuery: \"\",\n            matchesResults: [],\n            selectedMatchId: window.location.search ? window.location.search.substring(1).split('=')[1] : 0,\n            selectedMatchDetails: null\n\n        }\n\n        this.handleAwayQueryChange = this.handleAwayQueryChange.bind(this)\n        this.handleHomeQueryChange = this.handleHomeQueryChange.bind(this)\n        this.updateSearchResults = this.updateSearchResults.bind(this)\n        this.goToMatch = this.goToMatch.bind(this)\n\n    }\n\n\n\n    handleAwayQueryChange(event) {\n        this.setState({ awayQuery: event.target.value })\n    }\n\n    handleHomeQueryChange(event) {\n        this.setState({ homeQuery: event.target.value })\n    }\n    goToMatch(matchId) {\n        window.location = `/matches?id=${matchId}`\n    }\n\n    updateSearchResults() {\n        getMatchSearch(this.state.homeQuery, this.state.awayQuery, null, null).then(res => {\n            this.setState({ matchesResults: res.results })\n        })\n\n    }\n\n    componentDidMount() {\n        getMatchSearch(this.state.homeQuery, this.state.awayQuery, null, null).then(res => {\n            this.setState({ matchesResults: res.results })\n        })\n\n        getMatch(this.state.selectedMatchId).then(res => {\n            this.setState({ selectedMatchDetails: res.results[0] })\n        })\n\n\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                <MenuBar />\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Home Team</label>\n                            <FormInput placeholder=\"Home Team\" value={this.state.homeQuery} onChange={this.handleHomeQueryChange} />\n                        </FormGroup></Col>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Away Team</label>\n                            <FormInput placeholder=\"Away Team\" value={this.state.awayQuery} onChange={this.handleAwayQueryChange} />\n                        </FormGroup></Col>\n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\n                        </FormGroup></Col>\n\n                    </Row>\n\n\n                </Form>\n                <Divider />\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                <Table onRow={(record, rowIndex) => {\n                return {\n                onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter  \n                };\n                }} \n                dataSource={this.state.matchesResults} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n                    <ColumnGroup title=\"Teams\">\n                    <Column title=\"HomeTeam\" dataIndex=\"Home\" key=\"Home\" sorter= {(a, b) => a.Home.localeCompare(b.Home)}/>\n                    <Column title=\"AwayTeam\" dataIndex=\"Away\" key=\"Away\" sorter= {(a, b) => a.Away.localeCompare(b.Away)}/>\n                    </ColumnGroup>\n                    <ColumnGroup title=\"Goals\">\n                    <Column title=\"HomeGoals\" dataIndex=\"HomeGoals\" key=\"HomeGoals\" sorter= {(a, b) => Number(a.HomeGoals)-Number(b.HomeGoals)}/>\n                    <Column title=\"AwayGoals\" dataIndex=\"AwayGoals\" key=\"AwayGoals\" sorter= {(a, b) => Number(a.AwayGoals)-Number(b.AwayGoals)}/>\n                    </ColumnGroup>\n                    <Column title=\"Date\" dataIndex=\"Date\" key=\"Date\"/>\n                    <Column title=\"Time\" dataIndex=\"Time\" key=\"Time\"/>\n                </Table>\n                </div>\n                \n                <Divider />\n                {this.state.selectedMatchDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Card>\n                        <CardBody>\n\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col flex={2} style={{ textAlign: 'left' }}>\n                                    <CardTitle>{this.state.selectedMatchDetails.Home}</CardTitle>\n\n                                </Col>\n                                <Col flex={2} style={{ textAlign: 'center' }}>\n                                    {this.state.selectedMatchDetails.Date} at {this.state.selectedMatchDetails.Time}\n                                </Col>\n                                <Col flex={2} style={{ textAlign: 'right' }}>\n                                    <CardTitle>{this.state.selectedMatchDetails.Away}</CardTitle>\n                                </Col>\n\n                            </Row>\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <h3>{this.state.selectedMatchDetails.HomeGoals}</h3>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Goals\n                                </Col >\n\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <h3>{this.state.selectedMatchDetails.AwayGoals}</h3>\n                                </Col>\n                            </Row>\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <h5>{this.state.selectedMatchDetails.HTHomeGoals}</h5>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Half Time Goals\n                                </Col >\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <h5>{this.state.selectedMatchDetails.HTAwayGoals}</h5>\n                                </Col>\n                            </Row>\n\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <Progress value={this.state.selectedMatchDetails.ShotsOnTargetHome * 100 / this.state.selectedMatchDetails.ShotsHome}>{this.state.selectedMatchDetails.ShotsOnTargetHome} / {this.state.selectedMatchDetails.ShotsHome}</Progress>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Shot Accuracy\n                                </Col >\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <Progress value={this.state.selectedMatchDetails.ShotsOnTargetAway * 100 / this.state.selectedMatchDetails.ShotsAway}>{this.state.selectedMatchDetails.ShotsOnTargetAway} / {this.state.selectedMatchDetails.ShotsAway}</Progress>\n                                </Col>\n                            </Row>\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <h5>{this.state.selectedMatchDetails.CornersHome}</h5>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Corners\n                                </Col >\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <h5>{this.state.selectedMatchDetails.CornersAway}</h5>\n                                </Col>\n                            </Row>\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <h5>{this.state.selectedMatchDetails.FoulsHome}</h5>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Fouls\n                                </Col >\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <h5>{this.state.selectedMatchDetails.FoulsAway}</h5>\n                                </Col>\n                            </Row>\n\n\n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <h5>{this.state.selectedMatchDetails.RCHome}</h5>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Red Cards\n                                </Col >\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <h5>{this.state.selectedMatchDetails.RCAway}</h5>\n                                </Col>\n                            </Row>\n                            \n                            <Row gutter='30' align='middle' justify='center'>\n                                <Col span={9} style={{ textAlign: 'left' }}>\n                                    <h5>{this.state.selectedMatchDetails.YCHome}</h5>\n                                </Col >\n                                <Col span={6} style={{ textAlign: 'center' }}>\n                                    Yellow Cards\n                                </Col >\n                                <Col span={9} style={{ textAlign: 'right' }}>\n                                    <h5>{this.state.selectedMatchDetails.YCAway}</h5>\n                                </Col>\n                            </Row>\n\n                        </CardBody>\n                    </Card>\n                    \n                </div> : null}\n                <Divider />\n\n            </div>\n        )\n    }\n}\n\nexport default MatchesPage\n\n","/Users/weilongzhang/Downloads/NGA-website/client/src/pages/PlayersPage.js",["76","77","78","79","80"],"import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate \n} from 'antd'\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\n\n\n\n\nimport MenuBar from '../components/MenuBar';\nimport { getPlayerSearch, getPlayer } from '../fetcher'\nconst wideFormat = format('.3r');\n\nconst playerColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'Name',\n        key: 'Name',\n        sorter: (a, b) => a.Name.localeCompare(b.Name),\n        render: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>\n    },\n    {\n        title: 'Nationality',\n        dataIndex: 'Nationality',\n        key: 'Nationality',\n        sorter: (a, b) => a.Nationality.localeCompare(b.Nationality)\n    },\n    {\n        title: 'Rating',\n        dataIndex: 'Rating',\n        key: 'Rating',\n        sorter: (a, b) => a.Rating - b.Rating\n\n    },\n    {\n        title: 'Potential',\n        dataIndex: 'Potential',\n        key: 'Potential',\n        sorter: (a, b) => a.Rating - b.Rating\n        \n    },\n    {\n        title: 'Club',\n        dataIndex: 'Club',\n        key: 'Club',\n        sorter: (a, b) => a.Club.localeCompare(b.Club)\n        \n    },\n    {\n        title: 'Value',\n        dataIndex: 'Value',\n        key: 'Value'\n    }\n];\n\n\nclass PlayersPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            nameQuery: '',\n            nationalityQuery: '',\n            clubQuery: '',\n            ratingHighQuery: 100,\n            ratingLowQuery: 0,\n            potHighQuery: 100,\n            potLowQuery: 0,\n            selectedPlayerId: window.location.search ? window.location.search.substring(1).split('=')[1] : 229594,\n            selectedPlayerDetails: null,\n            playersResults: []\n\n        }\n\n        this.updateSearchResults = this.updateSearchResults.bind(this)\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\n        this.handleNationalityQueryChange = this.handleNationalityQueryChange.bind(this)\n        this.handleClubQueryChange = this.handleClubQueryChange.bind(this)\n        this.handleRatingChange = this.handleRatingChange.bind(this)\n        this.handlePotentialChange = this.handlePotentialChange.bind(this)\n    }\n\n    \n\n    handleNameQueryChange(event) {\n        this.setState({ nameQuery: event.target.value })\n    }\n\n    handleClubQueryChange(event) {\n        this.setState({ clubQuery: event.target.value })\n    }\n\n    handleNationalityQueryChange(event) {\n        this.setState({ nationalityQuery: event.target.value })\n    }\n\n    handleRatingChange(value) {\n        this.setState({ ratingLowQuery: value[0] })\n        this.setState({ ratingHighQuery: value[1] })\n    }\n\n    handlePotentialChange(value) {\n        this.setState({ potLowQuery: value[0] })\n        this.setState({ potHighQuery: value[1] })\n    }\n\n\n\n    updateSearchResults() {\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\n            this.setState({ playersResults: res.results })\n        })\n    }\n\n    componentDidMount() {\n        getPlayerSearch(this.state.nameQuery, this.state.nationalityQuery, this.state.clubQuery, this.state.ratingHighQuery, this.state.ratingLowQuery, this.state.potHighQuery, this.state.potLowQuery, null, null).then(res => {\n            this.setState({ playersResults: res.results })\n        })\n\n        getPlayer(this.state.selectedPlayerId).then(res => {\n            this.setState({ selectedPlayerDetails: res.results[0] })\n        })\n    }\n\n    render() {\n        return (\n\n            <div>\n\n                <MenuBar />\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Name</label>\n                            <FormInput placeholder=\"Name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\n                        </FormGroup></Col>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Nationality</label>\n                            <FormInput placeholder=\"Nationality\" value={this.state.nationalityQuery} onChange={this.handleNationalityQueryChange} />\n                        </FormGroup></Col>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Club</label>\n                            <FormInput placeholder=\"Club\" value={this.state.clubQuery} onChange={this.handleClubQueryChange} />\n                        </FormGroup></Col>\n                    </Row>\n                    <br></br>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Rating</label>\n                            <Slider range defaultValue={[50, 100]} onChange={this.handleRatingChange} />\n                        </FormGroup></Col>\n                        \n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>PotentialRating</label>\n                            <Slider range defaultValue={[50, 100]} onChange={this.handlePotentialChange} />\n                        </FormGroup></Col>\n                        \n                        <Col flex={2}><FormGroup style={{ width: '10vw' }}>\n                            <Button style={{ marginTop: '4vh' }} onClick={this.updateSearchResults}>Search</Button>\n                        </FormGroup></Col>\n\n                    </Row>\n\n\n                </Form>\n                <Divider />\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}><Table dataSource={this.state.playersResults} columns={playerColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/></div>\n                <Divider />\n\n                {this.state.selectedPlayerDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Card>\n                    \n                        <CardBody>\n                        <Row gutter='30' align='middle' justify='center'>\n                            <Col flex={2} style={{ textAlign: 'left' }}>\n                            <h3>{this.state.selectedPlayerDetails.Name}</h3>\n\n                            </Col>\n\n                            <Col flex={2} style={{ textAlign: 'right' }}>\n                            <img src={this.state.selectedPlayerDetails.Photo} referrerpolicy=\"no-referrer\" alt={null} style={{height:'15vh'}}/>\n\n                            </Col>\n                        </Row>\n                        <Row gutter='30' align='middle' justify='left'>\n                            <Col>\n                            <h5>{this.state.selectedPlayerDetails.Club}</h5>\n                            </Col>\n                            <Col>\n                            <h5>{this.state.selectedPlayerDetails.JerseyNumber}</h5>\n                            </Col>\n                            <Col>\n                            <h5>{this.state.selectedPlayerDetails.BestPosition}</h5>\n                            </Col>\n                        </Row>\n                        <br>\n                        </br>\n                        <Row gutter='30' align='middle' justify='left'>\n                            <Col>\n                            Age: {this.state.selectedPlayerDetails.Age}\n                            </Col>\n                            <Col>\n                            Height: {this.state.selectedPlayerDetails.Height}\n                            </Col>\n                            <Col>\n                            Weight: {this.state.selectedPlayerDetails.Weight}\n                            </Col>\n\n                            <Col flex={2} style={{ textAlign: 'right' }}>\n                            {this.state.selectedPlayerDetails.Nationality}\n                                <img src={this.state.selectedPlayerDetails.Flag} referrerpolicy=\"no-referrer\" alt={null} style={{height:'3vh', marginLeft: '1vw'}}/>\n                            </Col>\n\n                        </Row>\n                            <Row gutter='30' align='middle' justify='left'>\n                                <Col>\n                                Value: {this.state.selectedPlayerDetails.Value}\n                                </Col>\n                                <Col>\n                                Release Clause: {this.state.selectedPlayerDetails.ReleaseClause}\n                                </Col>\n                                <Col>\n                                Wage: {this.state.selectedPlayerDetails.Wage}\n                                </Col>\n                                <Col>\n                                Contract Valid Until: {this.state.selectedPlayerDetails.ContractValidUntil}\n                                </Col>\n                            \n                            </Row>\n                        </CardBody>\n\n                    </Card>\n\n                    <Card style={{marginTop: '2vh'}}>\n                        <CardBody>\n                            <Row gutter='30' align='middle' justify='center'>\n                            <Col flex={2} style={{ textAlign: 'left' }}>\n                            <h6>Skill</h6>\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.Skill} />\n                            <h6>Reputation</h6>\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.InternationalReputation} />\n                            <Divider/>\n                            <h6>Best Rating</h6>\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.BestOverallRating} >{this.state.selectedPlayerDetails.BestOverallRating}</Progress>\n                            <h6>Potential</h6>\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Potential} >{this.state.selectedPlayerDetails.Potential}</Progress>\n                            <h6>Rating</h6>\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Rating} >{this.state.selectedPlayerDetails.Rating}</Progress> \n                            </Col >\n                                <Col  push={2} flex={2}>\n\n                                    {this.state.selectedPlayerDetails.BestPosition === 'GK'?<RadarChart\n                                data={[this.state.selectedPlayerDetails]}\n                                tickFormat={t => wideFormat(t)}\n                                startingAngle={0}\n                                domains={[\n                                    { name: 'Diving', domain: [0, 100], getValue: d => d.GKDiving },\n                                    { name: 'Handling', domain: [0, 100], getValue: d => d.GKHandling },\n                                    { name: 'Kicking', domain: [0, 100], getValue: d => d.GKKicking },\n                                    { name: 'Penalties', domain: [0, 100], getValue: d => d.GKPenalties },\n                                    { name: 'Positioning', domain: [0, 100], getValue: d => d.GKPositioning },\n                                    { name: 'Reflexes', domain: [0, 100], getValue: d => d.GKReflexes }\n                                ]}\n                                width={450}\n                                height={400}\n                                \n                            />\n                                    \n                                    \n                                    :<RadarChart\n                                data={[this.state.selectedPlayerDetails]}\n                                tickFormat={t => wideFormat(t)}\n                                startingAngle={0}\n                                domains={[\n                                    { name: 'Agility', domain: [0, 100], getValue: d => d.NAdjustedAgility },\n                                    { name: 'Ball Control', domain: [0, 100], getValue: d => d.NBallControl },\n                                    { name: 'Passing', domain: [0, 100], getValue: d => d.NPassing },\n                                    { name: 'Positioning', domain: [0, 100], getValue: d => d.NPositioning },\n                                    { name: 'Stamina', domain: [0, 100], getValue: d => d.NStamina },\n                                    { name: 'Strength', domain: [0, 100], getValue: d => d.NStrength }\n                                ]}\n                                width={450}\n                                height={400}\n                                \n                            />}\n                                \n                                </Col>\n                            </Row>\n                        </CardBody>\n                    </Card>\n\n                </div> : null}\n\n            </div>\n        )\n    }\n}\n\nexport default PlayersPage\n\n","/Users/weilongzhang/Downloads/NGA-website/client/src/fetcher.js",[],"/Users/weilongzhang/Downloads/NGA-website/client/src/components/MenuBar.js",[],"/Users/weilongzhang/Downloads/NGA-website/client/src/pages/ArtistsPage.js",["81","82","83","84","85","86","87","88","89","90","91","92","93","94","95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":7,"column":5,"nodeType":"102","messageId":"103","endLine":7,"endColumn":15},{"ruleId":"100","severity":1,"message":"104","line":2,"column":62,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"101","line":6,"column":5,"nodeType":"102","messageId":"103","endLine":6,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":7,"column":5,"nodeType":"102","messageId":"103","endLine":7,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":204,"column":29,"nodeType":"108","endLine":204,"endColumn":144},{"ruleId":"106","severity":1,"message":"107","line":235,"column":33,"nodeType":"108","endLine":235,"endColumn":165},{"ruleId":"100","severity":1,"message":"101","line":4,"column":3,"nodeType":"102","messageId":"103","endLine":4,"endColumn":13},{"ruleId":"96","replacedBy":"109"},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","severity":1,"message":"101","line":4,"column":3,"nodeType":"102","messageId":"103","endLine":4,"endColumn":13},{"ruleId":"100","severity":1,"message":"111","line":10,"column":17,"nodeType":"102","messageId":"103","endLine":10,"endColumn":28},{"ruleId":"100","severity":1,"message":"101","line":7,"column":5,"nodeType":"102","messageId":"103","endLine":7,"endColumn":15},{"ruleId":"100","severity":1,"message":"104","line":2,"column":62,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"101","line":6,"column":5,"nodeType":"102","messageId":"103","endLine":6,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":7,"column":5,"nodeType":"102","messageId":"103","endLine":7,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":190,"column":29,"nodeType":"108","endLine":190,"endColumn":144},{"ruleId":"106","severity":1,"message":"107","line":220,"column":33,"nodeType":"108","endLine":220,"endColumn":165},{"ruleId":"100","severity":1,"message":"112","line":2,"column":10,"nodeType":"102","messageId":"103","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"113","line":2,"column":16,"nodeType":"102","messageId":"103","endLine":2,"endColumn":25},{"ruleId":"100","severity":1,"message":"114","line":2,"column":27,"nodeType":"102","messageId":"103","endLine":2,"endColumn":36},{"ruleId":"100","severity":1,"message":"115","line":2,"column":38,"nodeType":"102","messageId":"103","endLine":2,"endColumn":44},{"ruleId":"100","severity":1,"message":"104","line":2,"column":62,"nodeType":"102","messageId":"103","endLine":2,"endColumn":71},{"ruleId":"100","severity":1,"message":"116","line":2,"column":73,"nodeType":"102","messageId":"103","endLine":2,"endColumn":81},{"ruleId":"100","severity":1,"message":"101","line":6,"column":5,"nodeType":"102","messageId":"103","endLine":6,"endColumn":15},{"ruleId":"100","severity":1,"message":"105","line":7,"column":5,"nodeType":"102","messageId":"103","endLine":7,"endColumn":11},{"ruleId":"100","severity":1,"message":"117","line":10,"column":5,"nodeType":"102","messageId":"103","endLine":10,"endColumn":12},{"ruleId":"100","severity":1,"message":"118","line":11,"column":5,"nodeType":"102","messageId":"103","endLine":11,"endColumn":11},{"ruleId":"100","severity":1,"message":"119","line":12,"column":5,"nodeType":"102","messageId":"103","endLine":12,"endColumn":9},{"ruleId":"100","severity":1,"message":"120","line":14,"column":10,"nodeType":"102","messageId":"103","endLine":14,"endColumn":20},{"ruleId":"100","severity":1,"message":"121","line":22,"column":7,"nodeType":"102","messageId":"103","endLine":22,"endColumn":17},{"ruleId":"100","severity":1,"message":"111","line":23,"column":17,"nodeType":"102","messageId":"103","endLine":23,"endColumn":28},{"ruleId":"100","severity":1,"message":"122","line":26,"column":7,"nodeType":"102","messageId":"103","endLine":26,"endColumn":20},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'Pagination' is defined but never used.","Identifier","unusedVar","'CardTitle' is defined but never used.","'Select' is defined but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","JSXOpeningElement",["123"],["124"],"'ColumnGroup' is assigned a value but never used.","'Form' is defined but never used.","'FormInput' is defined but never used.","'FormGroup' is defined but never used.","'Button' is defined but never used.","'Progress' is defined but never used.","'Divider' is defined but never used.","'Slider' is defined but never used.","'Rate' is defined but never used.","'RadarChart' is defined but never used.","'wideFormat' is assigned a value but never used.","'playerColumns' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]