{"ast":null,"code":"var _jsxFileName = \"/Users/weilongzhang/Downloads/NGA-website/client/src/pages/ArtistsPage.js\";\nimport React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\nimport { Table, Pagination, Select, Row, Col, Divider, Slider, Rate } from 'antd';\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\nimport MenuBar from '../components/MenuBar';\nimport { getArtistSearch, getArtist } from '../fetcher';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst wideFormat = format('.3r');\nconst {\n  Column,\n  ColumnGroup\n} = Table;\nconst artistsColumns = [{\n  title: 'Name',\n  dataIndex: 'forwardDisplayName',\n  key: 'forwardDisplayName',\n  sorter: (a, b) => a.forwardDisplayName.localeCompare(b.forwardDisplayName),\n  render: (text, row) => /*#__PURE__*/_jsxDEV(\"a\", {\n    href: `/artists?id=${row.constituentID}`,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 32\n  }, this)\n}, {\n  title: 'Nationality',\n  dataIndex: 'nationality',\n  key: 'nationality',\n  sorter: (a, b) => a.nationality.localeCompare(b.nationality)\n}, {\n  title: 'Type',\n  dataIndex: 'constituentType',\n  key: 'constituentType',\n  sorter: (a, b) => a.constituentType.localeCompare(b.constituentType)\n}];\n\nclass ArtistsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nameQuery: '',\n      nationalityQuery: '',\n      //1783 is the constituentID of picasso\n      selectedArtistId: window.location.search ? window.location.search.substring(1).split('=')[1] : 1783,\n      selectedArtistDetails: null,\n      selectedArtistWorks: [],\n      artistsResults: []\n    };\n    this.updateSearchResults = this.updateSearchResults.bind(this);\n    this.handleNameQueryChange = this.handleNameQueryChange.bind(this);\n    this.handleNationalityQueryChange = this.handleNationalityQueryChange.bind(this);\n  }\n\n  handleNameQueryChange(event) {\n    this.setState({\n      nameQuery: event.target.value\n    });\n  }\n\n  handleNationalityQueryChange(event) {\n    this.setState({\n      nationalityQuery: event.target.value\n    });\n  }\n\n  updateSearchResults() {\n    getArtistSearch(this.state.nameQuery, this.state.nationalityQuery, null, null).then(res => {\n      this.setState({\n        artistsResults: res.results\n      });\n    });\n  }\n\n  componentDidMount() {\n    getArtistSearch(this.state.nameQuery, this.state.nationalityQuery, null, null).then(res => {\n      this.setState({\n        artistsResults: res.results\n      });\n    });\n    getArtist(this.state.selectedArtistId).then(res => {\n      this.setState({\n        selectedArtistDetails: res.results[0]\n      });\n      this.setState({\n        selectedArtistWorks: res.results\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(MenuBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        style: {\n          width: '80vw',\n          margin: '0 auto',\n          marginTop: '5vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"name\",\n                value: this.state.nameQuery,\n                onChange: this.handleNameQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            flex: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGroup, {\n              style: {\n                width: '20vw',\n                margin: '0 auto'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Nationality\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n                placeholder: \"nationality\",\n                value: this.state.nationalityQuery,\n                onChange: this.handleNationalityQueryChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          dataSource: this.state.artistsResults,\n          columns: artistsColumns,\n          pagination: {\n            pageSizeOptions: [5, 10],\n            defaultPageSize: 5,\n            showQuickJumper: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 84\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), this.state.selectedArtistDetails ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '70vw',\n          margin: '0 auto',\n          marginTop: '2vh'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: \"30\",\n              align: \"middle\",\n              justify: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                flex: 2,\n                style: {\n                  textAlign: 'left'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Artist Name: \", this.state.selectedArtistDetails.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                flex: 2,\n                style: {\n                  textAlign: 'middle'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"Nation: \", this.state.selectedArtistDetails.nationality]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            marginTop: '2vh'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardBody, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              onRow: (record, rowIndex) => {\n                return {// onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the artwork in the /artworks page using the Id parameter  \n                };\n              },\n              dataSource: this.state.selectedArtistWorks,\n              pagination: {\n                pageSizeOptions: [5, 10],\n                defaultPageSize: 5,\n                showQuickJumper: true\n              },\n              children: [/*#__PURE__*/_jsxDEV(Column, {\n                title: \"Artwork Title\",\n                dataIndex: \"title\",\n                sorter: (a, b) => a.title.localeCompare(b.title)\n              }, \"title\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                title: \"BeginYear\",\n                dataIndex: \"beginYear\",\n                sorter: (a, b) => Number(a.beginYear) - Number(b.beginYear)\n              }, \"beginYear\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Column, {\n                title: \"FinishYear\",\n                dataIndex: \"endYear\",\n                sorter: (a, b) => Number(a.endYear) - Number(b.endYear)\n              }, \"endYear\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 53\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ArtistsPage;","map":{"version":3,"sources":["/Users/weilongzhang/Downloads/NGA-website/client/src/pages/ArtistsPage.js"],"names":["React","Form","FormInput","FormGroup","Button","Card","CardBody","CardTitle","Progress","Table","Pagination","Select","Row","Col","Divider","Slider","Rate","RadarChart","format","MenuBar","getArtistSearch","getArtist","wideFormat","Column","ColumnGroup","artistsColumns","title","dataIndex","key","sorter","a","b","forwardDisplayName","localeCompare","render","text","row","constituentID","nationality","constituentType","ArtistsPage","Component","constructor","props","state","nameQuery","nationalityQuery","selectedArtistId","window","location","search","substring","split","selectedArtistDetails","selectedArtistWorks","artistsResults","updateSearchResults","bind","handleNameQueryChange","handleNationalityQueryChange","event","setState","target","value","then","res","results","componentDidMount","width","margin","marginTop","pageSizeOptions","defaultPageSize","showQuickJumper","textAlign","name","record","rowIndex","Number","beginYear","endYear"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,SAAf,EAA0BC,SAA1B,EAAqCC,MAArC,EAA6CC,IAA7C,EAAmDC,QAAnD,EAA6DC,SAA7D,EAAwEC,QAAxE,QAAwF,cAAxF;AAEA,SACIC,KADJ,EAEIC,UAFJ,EAGIC,MAHJ,EAIIC,GAJJ,EAKIC,GALJ,EAMIC,OANJ,EAOIC,MAPJ,EAQIC,IARJ,QASO,MATP;AAUA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAKA,OAAOC,OAAP,MAAoB,uBAApB;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,YAA3C;;AACA,MAAMC,UAAU,GAAGJ,MAAM,CAAC,KAAD,CAAzB;AACA,MAAM;AAAEK,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAA0Bf,KAAhC;AAGA,MAAMgB,cAAc,GAAG,CACnB;AACIC,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,oBAFf;AAGIC,EAAAA,GAAG,EAAE,oBAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,kBAAF,CAAqBC,aAArB,CAAmCF,CAAC,CAACC,kBAArC,CAJtB;AAKIE,EAAAA,MAAM,EAAE,CAACC,IAAD,EAAOC,GAAP,kBAAe;AAAG,IAAA,IAAI,EAAG,eAAcA,GAAG,CAACC,aAAc,EAA1C;AAAA,cAA8CF;AAA9C;AAAA;AAAA;AAAA;AAAA;AAL3B,CADmB,EASnB;AACIT,EAAAA,KAAK,EAAE,aADX;AAEIC,EAAAA,SAAS,EAAE,aAFf;AAGIC,EAAAA,GAAG,EAAE,aAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACQ,WAAF,CAAcL,aAAd,CAA4BF,CAAC,CAACO,WAA9B;AAJtB,CATmB,EAgBnB;AACIZ,EAAAA,KAAK,EAAE,MADX;AAEIC,EAAAA,SAAS,EAAE,iBAFf;AAGIC,EAAAA,GAAG,EAAE,iBAHT;AAIIC,EAAAA,MAAM,EAAE,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACS,eAAF,CAAkBN,aAAlB,CAAgCF,CAAC,CAACQ,eAAlC;AAJtB,CAhBmB,CAAvB;;AA2BA,MAAMC,WAAN,SAA0BxC,KAAK,CAACyC,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,gBAAgB,EAAE,EAFT;AAIT;AACAC,MAAAA,gBAAgB,EAAEC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GAAyBF,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuBC,SAAvB,CAAiC,CAAjC,EAAoCC,KAApC,CAA0C,GAA1C,EAA+C,CAA/C,CAAzB,GAA6E,IALtF;AAMTC,MAAAA,qBAAqB,EAAE,IANd;AAOTC,MAAAA,mBAAmB,EAAE,EAPZ;AAQTC,MAAAA,cAAc,EAAE;AARP,KAAb;AAYA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBC,IAAzB,CAA8B,IAA9B,CAA3B;AACA,SAAKC,qBAAL,GAA6B,KAAKA,qBAAL,CAA2BD,IAA3B,CAAgC,IAAhC,CAA7B;AACA,SAAKE,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCF,IAAlC,CAAuC,IAAvC,CAApC;AACH;;AAIDC,EAAAA,qBAAqB,CAACE,KAAD,EAAQ;AACzB,SAAKC,QAAL,CAAc;AAAEhB,MAAAA,SAAS,EAAEe,KAAK,CAACE,MAAN,CAAaC;AAA1B,KAAd;AACH;;AAGDJ,EAAAA,4BAA4B,CAACC,KAAD,EAAQ;AAChC,SAAKC,QAAL,CAAc;AAAEf,MAAAA,gBAAgB,EAAEc,KAAK,CAACE,MAAN,CAAaC;AAAjC,KAAd;AACH;;AAGDP,EAAAA,mBAAmB,GAAG;AAClBpC,IAAAA,eAAe,CAAC,KAAKwB,KAAL,CAAWC,SAAZ,EAAuB,KAAKD,KAAL,CAAWE,gBAAlC,EAAoD,IAApD,EAA0D,IAA1D,CAAf,CAA+EkB,IAA/E,CAAoFC,GAAG,IAAI;AACvF,WAAKJ,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAEU,GAAG,CAACC;AAAtB,OAAd;AACH,KAFD;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB/C,IAAAA,eAAe,CAAC,KAAKwB,KAAL,CAAWC,SAAZ,EAAuB,KAAKD,KAAL,CAAWE,gBAAlC,EAAoD,IAApD,EAA0D,IAA1D,CAAf,CAA+EkB,IAA/E,CAAoFC,GAAG,IAAI;AACvF,WAAKJ,QAAL,CAAc;AAAEN,QAAAA,cAAc,EAAEU,GAAG,CAACC;AAAtB,OAAd;AACH,KAFD;AAIA7C,IAAAA,SAAS,CAAC,KAAKuB,KAAL,CAAWG,gBAAZ,CAAT,CAAuCiB,IAAvC,CAA4CC,GAAG,IAAI;AAC/C,WAAKJ,QAAL,CAAc;AAAER,QAAAA,qBAAqB,EAAEY,GAAG,CAACC,OAAJ,CAAY,CAAZ;AAAzB,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEP,QAAAA,mBAAmB,EAAEW,GAAG,CAACC;AAA3B,OAAd;AACH,KAHD;AAIH;;AAEDhC,EAAAA,MAAM,GAAG;AACL,wBAEI;AAAA,8BAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEkC,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAb;AAAA,gCACI,QAAC,GAAD;AAAA,kCACI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEF,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eAAlB;AAAA,sCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADU,eAEV,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,MAAvB;AAA8B,gBAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWC,SAAhD;AAA2D,gBAAA,QAAQ,EAAE,KAAKa;AAA1E;AAAA;AAAA;AAAA;AAAA,sBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI,QAAC,GAAD;AAAK,YAAA,IAAI,EAAE,CAAX;AAAA,mCAAc,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAEU,gBAAAA,KAAK,EAAE,MAAT;AAAiBC,gBAAAA,MAAM,EAAE;AAAzB,eAAlB;AAAA,sCACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADU,eAEV,QAAC,SAAD;AAAW,gBAAA,WAAW,EAAC,aAAvB;AAAqC,gBAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWE,gBAAvD;AAAyE,gBAAA,QAAQ,EAAE,KAAKa;AAAxF;AAAA;AAAA;AAAA;AAAA,sBAFU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAd;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAiBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAkBI;AAAK,QAAA,KAAK,EAAE;AAAES,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAZ;AAAA,+BAAmE,QAAC,KAAD;AAAO,UAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWW,cAA9B;AAA8C,UAAA,OAAO,EAAE9B,cAAvD;AAAuE,UAAA,UAAU,EAAE;AAAE8C,YAAAA,eAAe,EAAC,CAAC,CAAD,EAAI,EAAJ,CAAlB;AAA2BC,YAAAA,eAAe,EAAE,CAA5C;AAA+CC,YAAAA,eAAe,EAAC;AAA/D;AAAnF;AAAA;AAAA;AAAA;AAAA;AAAnE;AAAA;AAAA;AAAA;AAAA,cAlBJ,eAmBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAnBJ,EAqBK,KAAK7B,KAAL,CAAWS,qBAAX,gBAAmC;AAAK,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAE,QAAzB;AAAmCC,UAAAA,SAAS,EAAE;AAA9C,SAAZ;AAAA,gCAChC,QAAC,IAAD;AAAA,iCAEI,QAAC,QAAD;AAAA,mCACA,QAAC,GAAD;AAAK,cAAA,MAAM,EAAC,IAAZ;AAAiB,cAAA,KAAK,EAAC,QAAvB;AAAgC,cAAA,OAAO,EAAC,QAAxC;AAAA,sCACI,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,CAAX;AAAc,gBAAA,KAAK,EAAE;AAAEI,kBAAAA,SAAS,EAAE;AAAb,iBAArB;AAAA,uCACA;AAAA,8CAAkB,KAAK9B,KAAL,CAAWS,qBAAX,CAAiCsB,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,GAAD;AAAK,gBAAA,IAAI,EAAE,CAAX;AAAc,gBAAA,KAAK,EAAE;AAAED,kBAAAA,SAAS,EAAE;AAAb,iBAArB;AAAA,uCACA;AAAA,yCAAa,KAAK9B,KAAL,CAAWS,qBAAX,CAAiCf,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADgC,eAuDhC,QAAC,IAAD;AAAM,UAAA,KAAK,EAAE;AAACgC,YAAAA,SAAS,EAAE;AAAZ,WAAb;AAAA,iCACI,QAAC,QAAD;AAAA,mCACA,QAAC,KAAD;AAAO,cAAA,KAAK,EAAE,CAACM,MAAD,EAASC,QAAT,KAAsB;AAChC,uBAAO,CACP;AADO,iBAAP;AAGC,eAJL;AAKI,cAAA,UAAU,EAAE,KAAKjC,KAAL,CAAWU,mBAL3B;AAKgD,cAAA,UAAU,EAAE;AAAEiB,gBAAAA,eAAe,EAAC,CAAC,CAAD,EAAI,EAAJ,CAAlB;AAA2BC,gBAAAA,eAAe,EAAE,CAA5C;AAA+CC,gBAAAA,eAAe,EAAC;AAA/D,eAL5D;AAAA,sCAOQ,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,eAAd;AAA8B,gBAAA,SAAS,EAAC,OAAxC;AAA4D,gBAAA,MAAM,EAAG,CAAC3C,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACJ,KAAF,CAAQO,aAAR,CAAsBF,CAAC,CAACL,KAAxB;AAA/E,iBAAoD,OAApD;AAAA;AAAA;AAAA;AAAA,sBAPR,eAaQ,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,WAAd;AAA0B,gBAAA,SAAS,EAAC,WAApC;AAAgE,gBAAA,MAAM,EAAG,CAACI,CAAD,EAAIC,CAAJ,KAAU+C,MAAM,CAAChD,CAAC,CAACiD,SAAH,CAAN,GAAoBD,MAAM,CAAC/C,CAAC,CAACgD,SAAH;AAA7G,iBAAoD,WAApD;AAAA;AAAA;AAAA;AAAA,sBAbR,eAcQ,QAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,YAAd;AAA2B,gBAAA,SAAS,EAAC,SAArC;AAA6D,gBAAA,MAAM,EAAG,CAACjD,CAAD,EAAIC,CAAJ,KAAU+C,MAAM,CAAChD,CAAC,CAACkD,OAAH,CAAN,GAAkBF,MAAM,CAAC/C,CAAC,CAACiD,OAAH;AAAxG,iBAAmD,SAAnD;AAAA;AAAA;AAAA;AAAA,sBAdR;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvDgC;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnC,GAqIQ,IA1Jb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAgKH;;AAlNqC;;AAqN1C,eAAexC,WAAf","sourcesContent":["import React from 'react';\nimport { Form, FormInput, FormGroup, Button, Card, CardBody, CardTitle, Progress } from \"shards-react\";\n\nimport {\n    Table,\n    Pagination,\n    Select,\n    Row,\n    Col,\n    Divider,\n    Slider,\n    Rate \n} from 'antd'\nimport { RadarChart } from 'react-vis';\nimport { format } from 'd3-format';\n\n\n\n\nimport MenuBar from '../components/MenuBar';\nimport { getArtistSearch, getArtist } from '../fetcher'\nconst wideFormat = format('.3r');\nconst { Column, ColumnGroup } = Table;\n\n\nconst artistsColumns = [\n    {\n        title: 'Name',\n        dataIndex: 'forwardDisplayName',\n        key: 'forwardDisplayName',\n        sorter: (a, b) => a.forwardDisplayName.localeCompare(b.forwardDisplayName),\n        render: (text, row) => <a href={`/artists?id=${row.constituentID}`}>{text}</a>\n    },\n\n    {\n        title: 'Nationality',\n        dataIndex: 'nationality',\n        key: 'nationality',\n        sorter: (a, b) => a.nationality.localeCompare(b.nationality)\n    },\n\n    {\n        title: 'Type',\n        dataIndex: 'constituentType',\n        key: 'constituentType',\n        sorter: (a, b) => a.constituentType.localeCompare(b.constituentType)\n        \n    }\n\n];\n\n\nclass ArtistsPage extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            nameQuery: '',\n            nationalityQuery: '',\n\n            //1783 is the constituentID of picasso\n            selectedArtistId: window.location.search ? window.location.search.substring(1).split('=')[1] : 1783,\n            selectedArtistDetails: null,\n            selectedArtistWorks: [],\n            artistsResults: []\n\n        }\n\n        this.updateSearchResults = this.updateSearchResults.bind(this)\n        this.handleNameQueryChange = this.handleNameQueryChange.bind(this)\n        this.handleNationalityQueryChange = this.handleNationalityQueryChange.bind(this)\n    }\n\n    \n\n    handleNameQueryChange(event) {\n        this.setState({ nameQuery: event.target.value })\n    }\n\n\n    handleNationalityQueryChange(event) {\n        this.setState({ nationalityQuery: event.target.value })\n    }\n\n\n    updateSearchResults() {\n        getArtistSearch(this.state.nameQuery, this.state.nationalityQuery, null, null).then(res => {\n            this.setState({ artistsResults: res.results })\n        })\n    }\n\n    componentDidMount() {\n        getArtistSearch(this.state.nameQuery, this.state.nationalityQuery, null, null).then(res => {\n            this.setState({ artistsResults: res.results })\n        })\n\n        getArtist(this.state.selectedArtistId).then(res => {\n            this.setState({ selectedArtistDetails: res.results[0] })\n            this.setState({ selectedArtistWorks: res.results })\n        })\n    }\n\n    render() {\n        return (\n\n            <div>\n\n                <MenuBar />\n                <Form style={{ width: '80vw', margin: '0 auto', marginTop: '5vh' }}>\n                    <Row>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Name</label>\n                            <FormInput placeholder=\"name\" value={this.state.nameQuery} onChange={this.handleNameQueryChange} />\n                        </FormGroup></Col>\n                        <Col flex={2}><FormGroup style={{ width: '20vw', margin: '0 auto' }}>\n                            <label>Nationality</label>\n                            <FormInput placeholder=\"nationality\" value={this.state.nationalityQuery} onChange={this.handleNationalityQueryChange} />\n                        </FormGroup></Col>\n                    </Row>\n                    <br></br>\n                </Form>\n                \n                <Divider />\n                <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}><Table dataSource={this.state.artistsResults} columns={artistsColumns} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}/></div>\n                <Divider />\n\n                {this.state.selectedArtistDetails ? <div style={{ width: '70vw', margin: '0 auto', marginTop: '2vh' }}>\n                    <Card>\n                    \n                        <CardBody>\n                        <Row gutter='30' align='middle' justify='center'>\n                            <Col flex={2} style={{ textAlign: 'left' }}>\n                            <h3>Artist Name: {this.state.selectedArtistDetails.name}</h3>\n\n                            </Col>\n\n                            <Col flex={2} style={{ textAlign: 'middle' }}>\n                            <h3>Nation: {this.state.selectedArtistDetails.nationality}</h3>\n                            </Col>\n                        </Row>\n                       \n                        {/* <br>\n                        </br> */}\n                        {/* <Row gutter='30' align='middle' justify='left'>\n                            <Col>\n                            Age: {this.state.selectedPlayerDetails.Age}\n                            </Col>\n                            <Col>\n                            Height: {this.state.selectedPlayerDetails.Height}\n                            </Col>\n                            <Col>\n                            Weight: {this.state.selectedPlayerDetails.Weight}\n                            </Col>\n\n                            <Col flex={2} style={{ textAlign: 'right' }}>\n                            {this.state.selectedPlayerDetails.Nationality}\n                                <img src={this.state.selectedPlayerDetails.Flag} referrerpolicy=\"no-referrer\" alt={null} style={{height:'3vh', marginLeft: '1vw'}}/>\n                            </Col>\n\n                        </Row> */}\n\n                        {/* <Row gutter='30' align='middle' justify='left'>\n                            <Col>\n                            Value: {this.state.selectedPlayerDetails.Value}\n                            </Col>\n                            <Col>\n                            Release Clause: {this.state.selectedPlayerDetails.ReleaseClause}\n                            </Col>\n                            <Col>\n                            Wage: {this.state.selectedPlayerDetails.Wage}\n                            </Col>\n                            <Col>\n                            Contract Valid Until: {this.state.selectedPlayerDetails.ContractValidUntil}\n                            </Col>\n                        \n                        </Row> */}\n\n                        </CardBody>\n\n                    </Card>\n\n                    <Card style={{marginTop: '2vh'}}>\n                        <CardBody>\n                        <Table onRow={(record, rowIndex) => {\n                            return {\n                            // onClick: event => {this.goToMatch(record.MatchId)}, // clicking a row takes the user to a detailed view of the artwork in the /artworks page using the Id parameter  \n                            };\n                            }} \n                            dataSource={this.state.selectedArtistWorks} pagination={{ pageSizeOptions:[5, 10], defaultPageSize: 5, showQuickJumper:true }}>\n                                \n                                <Column title=\"Artwork Title\" dataIndex=\"title\" key=\"title\" sorter= {(a, b) => a.title.localeCompare(b.title)}/>\n\n                                {/* <Column title=\"Nation\" dataIndex=\"nation\" key=\"nation\" sorter= {(a, b) => a.nation.localeCompare(b.nation)}/> */}\n\n                                {/* <Column title=\"Artist\" dataIndex=\"artist\" key=\"artist\" sorter= {(a, b) => a.artist.localeCompare(b.artist)}/> */}\n                                \n                                <Column title=\"BeginYear\" dataIndex=\"beginYear\" key=\"beginYear\" sorter= {(a, b) => Number(a.beginYear)-Number(b.beginYear)}/>\n                                <Column title=\"FinishYear\" dataIndex=\"endYear\" key=\"endYear\" sorter= {(a, b) => Number(a.endYear)-Number(b.endYear)}/>\n                                \n\n                            </Table>\n\n\n                            {/* <Row gutter='30' align='middle' justify='center'>\n                            <Col flex={2} style={{ textAlign: 'left' }}>\n                            <h6>Skill</h6>\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.Skill} />\n                            <h6>Reputation</h6>\n                            <Rate disabled defaultValue={this.state.selectedPlayerDetails.InternationalReputation} />\n                            <Divider/>\n                            <h6>Best Rating</h6>\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.BestOverallRating} >{this.state.selectedPlayerDetails.BestOverallRating}</Progress>\n                            <h6>Potential</h6>\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Potential} >{this.state.selectedPlayerDetails.Potential}</Progress>\n                            <h6>Rating</h6>\n                                <Progress style={{ width: '20vw'}} value={this.state.selectedPlayerDetails.Rating} >{this.state.selectedPlayerDetails.Rating}</Progress> \n                            </Col >\n                                <Col  push={2} flex={2}>\n\n                                    {this.state.selectedPlayerDetails.BestPosition === 'GK'?<RadarChart\n                                data={[this.state.selectedPlayerDetails]}\n                                tickFormat={t => wideFormat(t)}\n                                startingAngle={0}\n                                domains={[\n                                    { name: 'Diving', domain: [0, 100], getValue: d => d.GKDiving },\n                                    { name: 'Handling', domain: [0, 100], getValue: d => d.GKHandling },\n                                    { name: 'Kicking', domain: [0, 100], getValue: d => d.GKKicking },\n                                    { name: 'Penalties', domain: [0, 100], getValue: d => d.GKPenalties },\n                                    { name: 'Positioning', domain: [0, 100], getValue: d => d.GKPositioning },\n                                    { name: 'Reflexes', domain: [0, 100], getValue: d => d.GKReflexes }\n                                ]}\n                                width={450}\n                                height={400}\n                                \n                            />\n                                    \n                                    \n                                    :<RadarChart\n                                data={[this.state.selectedPlayerDetails]}\n                                tickFormat={t => wideFormat(t)}\n                                startingAngle={0}\n                                domains={[\n                                    { name: 'Agility', domain: [0, 100], getValue: d => d.NAdjustedAgility },\n                                    { name: 'Ball Control', domain: [0, 100], getValue: d => d.NBallControl },\n                                    { name: 'Passing', domain: [0, 100], getValue: d => d.NPassing },\n                                    { name: 'Positioning', domain: [0, 100], getValue: d => d.NPositioning },\n                                    { name: 'Stamina', domain: [0, 100], getValue: d => d.NStamina },\n                                    { name: 'Strength', domain: [0, 100], getValue: d => d.NStrength }\n                                ]}\n                                width={450}\n                                height={400}\n                                \n                            />}\n                                \n                                </Col>\n                            </Row> */}\n                        </CardBody>\n                    </Card>\n\n                </div> : null}\n\n            </div>\n        )\n    }\n}\n\nexport default ArtistsPage\n\n"]},"metadata":{},"sourceType":"module"}